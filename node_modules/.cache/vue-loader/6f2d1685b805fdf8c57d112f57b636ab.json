{"remainingRequest":"/Users/lvming/Desktop/work/personWork/webappBook/weibosource/weibo/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lvming/Desktop/work/personWork/webappBook/weibosource/weibo/src/views/comment/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lvming/Desktop/work/personWork/webappBook/weibosource/weibo/src/views/comment/index.vue","mtime":1581857746962},{"path":"/Users/lvming/Desktop/work/personWork/webappBook/weibosource/weibo/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/lvming/Desktop/work/personWork/webappBook/weibosource/weibo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lvming/Desktop/work/personWork/webappBook/weibosource/weibo/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBoZWFkZXJiYXIgZnJvbSAnQC9jb21wb25lbnRzL2hlYWRlcmJhcicKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdjb21tZW50JywKICBjb21wb25lbnRzOnsKICAgIGhlYWRlcmJhcgogIH0sCiAgZGF0YSgpewogICAgcmV0dXJuIHsKICAgICAgcG9zdENvbnRlbnQ6ICcnLAogICAgICB0ZXh0Q291bnQ6IDAsCiAgICAgIGltYWdlTGlzdDogW10sCiAgICAgIGlzUmVwb3N0OiBmYWxzZQogICAgfQogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIGltZ1N0eWxlICgpIHsKICAgICAgcmV0dXJuIGl0ZW0gPT4gewogICAgICAgIHJldHVybiB7CiAgICAgICAgICBiYWNrZ3JvdW5kSW1hZ2U6ICd1cmwoJyArIGl0ZW0uYmFzZTY0ICsgJyknCiAgICAgICAgfQogICAgICB9CiAgICB9LAogICAgY3VycmVudFVzZXIoKXsKICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLnN0YXRlLmN1cnJlbnRVc2VyCiAgICB9LAogICAgdG9SZXBvc3REYXRhKCl7CiAgICAgIGlmICh0aGlzLiRzdG9yZS5zdGF0ZS50b1JlcG9zdERhdGEpIHsKICAgICAgICByZXR1cm4gdGhpcy4kc3RvcmUuc3RhdGUudG9SZXBvc3REYXRhLm1ibG9nCiAgICAgIH0KCiAgICAgIHJldHVybiBudWxsCiAgICAgIAogICAgfQogIH0sCiAgbWV0aG9kczp7CiAgICBvbmlucHV0KCl7CiAgICAgIHRoaXMudGV4dENvdW50ID0gdGhpcy5wb3N0Q29udGVudC5sZW5ndGgKICAgIH0sCiAgICBvcGVuRmlsZVVwbG9hZGVyKCl7CiAgICAgIGlmICh0aGlzLmltYWdlTGlzdC5sZW5ndGggPT0gMCkgewogICAgICAgIHRoaXMuJHJlZnMuZmlsZVVwbG9hZGVyLmNsaWNrKCkKICAgICAgfQogICAgICAKICAgIH0sCiAgICBmaWxlQ2hhbmdlIChldmVudCkgewogICAgICBsZXQgZmlsZXMgPSBldmVudC50YXJnZXQuZmlsZXM7IC8v6I635Y+W5paH5Lu25a+56LGhCiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgZmlsZXMubGVuZ3RoOyBpKyspIHsKICAgICAgICB2YXIgcmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoKTsKICAgICAgICByZWFkZXIucmVhZEFzRGF0YVVSTChmaWxlc1tpXSk7IC8v5bCG5Zu+54mH6L2s5o2i5oiQYmFzZTY05a2X56ym5LiyCiAgICAgICAgcmVhZGVyLm9ubG9hZCA9IChlKSA9PiB7CiAgICAgICAgICBsZXQgaW1hZ2UgPSBuZXcgSW1hZ2UoKSAvL+i9rOaNouaIkEltYWdl5a+56LGh77yM5Li65LqG6I635Y+W5Zu+54mH5aSn5bCPCiAgICAgICAgICBpbWFnZS5vbmxvYWQgPSAoKSA9PiB7CiAgICAgICAgICAgIC8vIOS/neWtmOWIsOWbvueJh+WIl+ihqOaVsOe7hOS4rQogICAgICAgICAgICB0aGlzLmltYWdlTGlzdC5wdXNoKHsKICAgICAgICAgICAgICBiYXNlNjQ6IGUudGFyZ2V0LnJlc3VsdCwKICAgICAgICAgICAgICB3aWR0aDogaW1hZ2Uud2lkdGgsCiAgICAgICAgICAgICAgaGVpZ2h0OiBpbWFnZS5oZWlnaHQKICAgICAgICAgICAgfSkKICAgICAgICAgIH0KICAgICAgICAgIGltYWdlLnNyYyA9IGUudGFyZ2V0LnJlc3VsdAogICAgICAgIH0KICAgICAgfQogICAgICAvLyDmr4/mrKHpgInlrozlm77niYflkI7opoHmuIXpmaR2YWx1ZQogICAgICBldmVudC50YXJnZXQudmFsdWUgPSBudWxsCiAgICB9LAogICAgZGVsZXRlSW1hZ2UoaW5kZXgpewogICAgICB0aGlzLmltYWdlTGlzdC5zcGxpY2UoaW5kZXgsIDEpCiAgICB9LAogICAgc3VibWl0KCl7CiAgICAgIGxldCB0ZXh0ID0gdGhpcy5wb3N0Q29udGVudAogICAgICBsZXQgaWQgPSBEYXRlLm5vdygpIC8v5oyH5a6a5ZSv5LiAaWQKICAgICAgaWYgKHRoaXMuaW1hZ2VMaXN0Lmxlbmd0aCA+IDApIHsvL+WIpOaWreaYr+WQpumAieaLqeS6huWbvueJhwogICAgICAgIGxldCBzdHIgPSAnPGEgZGF0YS1wcmV2aWV3LXNyYz0iJCRzcmMiIGRhdGEtcHJldmlldy1ncm91cD0iJCRpZCI+PHNwYW4gY2xhc3M9InN1cmwtdGV4dCI+6K+E6K666YWN5Zu+PC9zcGFuPjwvYT4nCiAgICAgICAgc3RyID0gc3RyLnJlcGxhY2UoJyQkc3JjJywgdGhpcy5pbWFnZUxpc3RbMF0uYmFzZTY0KS5yZXBsYWNlKCckJGlkJywgaWQpIC8vIOS9v+eUqGJhc2U2NOWtl+espuS4suabv+aNogogICAgICAgIHRleHQgKz0gc3RyCiAgICAgIH0KCiAgICAgIGxldCBvYmogPSB7CiAgICAgICAgY3JlYXRlZF9hdDogRGF0ZS5ub3coKSwKICAgICAgICBpZDogaWQsCiAgICAgICAgbGlrZV9jb3VudDogMCwKICAgICAgICB0ZXh0OiB0ZXh0LAogICAgICAgIG1vcmVfaW5mb191c2VyczogW10sCiAgICAgICAgdXNlcjogewogICAgICAgICAgc2NyZWVuX25hbWU6IHRoaXMuY3VycmVudFVzZXIuc2NyZWVuX25hbWUsCiAgICAgICAgICBwcm9maWxlX2ltYWdlX3VybDogdGhpcy5jdXJyZW50VXNlci5wcm9maWxlX2ltYWdlX3VybCwKICAgICAgICAgIGJhZGdlOnsKICAgICAgICAgICAgdXNlcl9uYW1lX2NlcnRpZmljYXRlOiB0aGlzLmN1cnJlbnRVc2VyLnZlcmlmaWVkCiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CgogICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCgnYWRkQ29tbWVudCcsb2JqKQogICAgICBtdWkudG9hc3QoJ+ivhOiuuuaIkOWKnycpCgogICAgICBpZiAodGhpcy5pc1JlcG9zdCkgewogICAgICAgIHRoaXMuZG9SZXBvc3QoKQogICAgICB9CiAgICAgIHRoaXMuJHJvdXRlci5iYWNrKCkKICAgIH0sCiAgICBkb1JlcG9zdCgpewogICAgICBsZXQgb2JqID0gewogICAgICAgIG1ibG9nOiB7CiAgICAgICAgICBpZDogRGF0ZS5ub3coKSwKICAgICAgICAgIGF0dGl0aWRlc19jb3VudDogMCwKICAgICAgICAgIHJlcG9zdHNfY291bnQ6IDAsCiAgICAgICAgICBjb21tZW50c19jb3VudDogMCwKICAgICAgICAgIHNvdXJjZTogJ+W+ruWNmm1vYmlsZeeJiCcsCiAgICAgICAgICB0ZXh0OiB0aGlzLnBvc3RDb250ZW50LAogICAgICAgICAgcGljczpbXSwKICAgICAgICAgIHJldHdlZXRlZF9zdGF0dXM6IHRoaXMudG9SZXBvc3REYXRhLAogICAgICAgICAgdXNlcjogewogICAgICAgICAgICBzY3JlZW5fbmFtZTogdGhpcy5jdXJyZW50VXNlci5zY3JlZW5fbmFtZSwKICAgICAgICAgICAgcHJvZmlsZV9pbWFnZV91cmw6IHRoaXMuY3VycmVudFVzZXIucHJvZmlsZV9pbWFnZV91cmwsCiAgICAgICAgICAgIGJhZGdlOnsKICAgICAgICAgICAgICB1c2VyX25hbWVfY2VydGlmaWNhdGU6IHRoaXMuY3VycmVudFVzZXIudmVyaWZpZWQKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQoKICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ2FkZFBvc3QnLG9iaikKICAgIH0KICB9Cgp9Cg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA","file":"index.vue","sourceRoot":"src/views/comment","sourcesContent":["<template>\n  <div class=\"container\">\n    <headerbar useRightBtn=\"提交\" :useBack=\"true\" title=\"评论微博\" @rightBtnClick=\"submit\"></headerbar>\n    <textarea id=\"postContent\"\n      maxlength=\"30\"\n      placeholder=\"请输入文字...\"\n      @input=\"oninput\"\n      v-model=\"postContent\"></textarea>\n    <div class=\"text-count\"><span class=\"left-count\">{{textCount}}</span>/30</div>\n    <div class=\"selected-images\">\n      <div class=\"image-item\" v-for=\"(item,index) in imageList\" :key=\"index\" :style=\"imgStyle(item)\">\n        <div class=\"delete-icon\" @click=\"deleteImage(index)\"></div>\n      </div>\n      <div v-if=\"imageList.length == 0\" class=\"plus-image\" @click=\"openFileUploader\"></div>\n    </div>\n    <input type=\"file\" id=\"fileUploader\" ref=\"fileUploader\"\n       @change=\"fileChange\"\n       accept=\"image/*\"\n       multiple=\"multiple\"/>\n    <div class=\"repost-content\">\n      <div class=\"mui-checkbox repost-btn\">\n        <input class=\"repost-checkbox\" value=\"\" v-model=\"isRepost\" type=\"checkbox\">\n      </div>\n      <div class=\"repost-text\">同时转发</div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport headerbar from '@/components/headerbar'\nexport default {\n  name: 'comment',\n  components:{\n    headerbar\n  },\n  data(){\n    return {\n      postContent: '',\n      textCount: 0,\n      imageList: [],\n      isRepost: false\n    }\n  },\n  computed: {\n    imgStyle () {\n      return item => {\n        return {\n          backgroundImage: 'url(' + item.base64 + ')'\n        }\n      }\n    },\n    currentUser(){\n      return this.$store.state.currentUser\n    },\n    toRepostData(){\n      if (this.$store.state.toRepostData) {\n        return this.$store.state.toRepostData.mblog\n      }\n\n      return null\n      \n    }\n  },\n  methods:{\n    oninput(){\n      this.textCount = this.postContent.length\n    },\n    openFileUploader(){\n      if (this.imageList.length == 0) {\n        this.$refs.fileUploader.click()\n      }\n      \n    },\n    fileChange (event) {\n      let files = event.target.files; //获取文件对象\n      for (let i = 0; i < files.length; i++) {\n        var reader = new FileReader();\n        reader.readAsDataURL(files[i]); //将图片转换成base64字符串\n        reader.onload = (e) => {\n          let image = new Image() //转换成Image对象，为了获取图片大小\n          image.onload = () => {\n            // 保存到图片列表数组中\n            this.imageList.push({\n              base64: e.target.result,\n              width: image.width,\n              height: image.height\n            })\n          }\n          image.src = e.target.result\n        }\n      }\n      // 每次选完图片后要清除value\n      event.target.value = null\n    },\n    deleteImage(index){\n      this.imageList.splice(index, 1)\n    },\n    submit(){\n      let text = this.postContent\n      let id = Date.now() //指定唯一id\n      if (this.imageList.length > 0) {//判断是否选择了图片\n        let str = '<a data-preview-src=\"$$src\" data-preview-group=\"$$id\"><span class=\"surl-text\">评论配图</span></a>'\n        str = str.replace('$$src', this.imageList[0].base64).replace('$$id', id) // 使用base64字符串替换\n        text += str\n      }\n\n      let obj = {\n        created_at: Date.now(),\n        id: id,\n        like_count: 0,\n        text: text,\n        more_info_users: [],\n        user: {\n          screen_name: this.currentUser.screen_name,\n          profile_image_url: this.currentUser.profile_image_url,\n          badge:{\n            user_name_certificate: this.currentUser.verified\n          }\n        }\n      }\n\n      this.$store.dispatch('addComment',obj)\n      mui.toast('评论成功')\n\n      if (this.isRepost) {\n        this.doRepost()\n      }\n      this.$router.back()\n    },\n    doRepost(){\n      let obj = {\n        mblog: {\n          id: Date.now(),\n          attitides_count: 0,\n          reposts_count: 0,\n          comments_count: 0,\n          source: '微博mobile版',\n          text: this.postContent,\n          pics:[],\n          retweeted_status: this.toRepostData,\n          user: {\n            screen_name: this.currentUser.screen_name,\n            profile_image_url: this.currentUser.profile_image_url,\n            badge:{\n              user_name_certificate: this.currentUser.verified\n            }\n          }\n        }\n      }\n\n      this.$store.dispatch('addPost',obj)\n    }\n  }\n\n}\n</script>\n<style scoped>\n.container {\n  position: fixed;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  top: 0;\n  background-color: #fff;\n}\n#postContent {\n  margin-top: 45px;\n  border: none;\n  font-size: 16px;\n  width: 100%;\n  height: 200px;\n  box-sizing: border-box;\n}\n.text-count {\n  font-size: 14px;\n  color: #707070;\n  position: absolute;\n  right: 20px;\n  top: 230px;\n}\n#fileUploader {\n  display: none;\n}\n.selected-images {\n  display: flex;\n  flex-wrap: wrap;\n}\n.image-item {\n  width: 100px;\n  height: 100px;\n  position: relative;\n  background-size: cover;\n  background-position: center center;\n  background-repeat: no-repeat;\n  margin-left: 20px;\n  margin-bottom: 20px;\n}\n.plus-image {\n  width: 100px;\n  height: 100px;\n  position: relative;\n  background-size: 24px 24px;\n  background-position: center center;\n  background-repeat: no-repeat;\n  background-image: url('./imgs/plus.png');\n  margin-left: 20px;\n  border: 1px dashed #aaa;\n}\n.delete-icon {\n  position: absolute;\n  width: 15px;\n  height: 15px;\n  background-image: url('./imgs/delete.png');\n  background-size: cover;\n  top: -7px;\n  right: -7px;\n}\n.repost-content {\n  margin-top: 10px;\n  overflow: hidden;\n}\n.repost-btn {\n  float: left;\n  width: 50px;\n  height: 50px;\n  margin-left: 15px;\n}\n.repost-checkbox:checked::before {\n  color: #ff9f52 !important;\n}\n.repost-text {\n  float: left;\n  margin-top: 9px;\n  font-size: 16px;\n  color: #333;\n  margin-left: -10px;\n}\n</style>\n"]}]}