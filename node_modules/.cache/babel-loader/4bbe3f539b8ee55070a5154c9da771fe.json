{"remainingRequest":"/Users/lvming/Desktop/work/personWork/webappBook/weibosource/weibo/node_modules/thread-loader/dist/cjs.js!/Users/lvming/Desktop/work/personWork/webappBook/weibosource/weibo/node_modules/babel-loader/lib/index.js!/Users/lvming/Desktop/work/personWork/webappBook/weibosource/weibo/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/lvming/Desktop/work/personWork/webappBook/weibosource/weibo/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lvming/Desktop/work/personWork/webappBook/weibosource/weibo/src/views/comment/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lvming/Desktop/work/personWork/webappBook/weibosource/weibo/src/views/comment/index.vue","mtime":1581857746962},{"path":"/Users/lvming/Desktop/work/personWork/webappBook/weibosource/weibo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lvming/Desktop/work/personWork/webappBook/weibosource/weibo/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lvming/Desktop/work/personWork/webappBook/weibosource/weibo/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/lvming/Desktop/work/personWork/webappBook/weibosource/weibo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lvming/Desktop/work/personWork/webappBook/weibosource/weibo/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc3BsaWNlIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcucmVwbGFjZSI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCBoZWFkZXJiYXIgZnJvbSAnQC9jb21wb25lbnRzL2hlYWRlcmJhcic7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnY29tbWVudCcsCiAgY29tcG9uZW50czogewogICAgaGVhZGVyYmFyOiBoZWFkZXJiYXIKICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBwb3N0Q29udGVudDogJycsCiAgICAgIHRleHRDb3VudDogMCwKICAgICAgaW1hZ2VMaXN0OiBbXSwKICAgICAgaXNSZXBvc3Q6IGZhbHNlCiAgICB9OwogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIGltZ1N0eWxlOiBmdW5jdGlvbiBpbWdTdHlsZSgpIHsKICAgICAgcmV0dXJuIGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgIGJhY2tncm91bmRJbWFnZTogJ3VybCgnICsgaXRlbS5iYXNlNjQgKyAnKScKICAgICAgICB9OwogICAgICB9OwogICAgfSwKICAgIGN1cnJlbnRVc2VyOiBmdW5jdGlvbiBjdXJyZW50VXNlcigpIHsKICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLnN0YXRlLmN1cnJlbnRVc2VyOwogICAgfSwKICAgIHRvUmVwb3N0RGF0YTogZnVuY3Rpb24gdG9SZXBvc3REYXRhKCkgewogICAgICBpZiAodGhpcy4kc3RvcmUuc3RhdGUudG9SZXBvc3REYXRhKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLnN0YXRlLnRvUmVwb3N0RGF0YS5tYmxvZzsKICAgICAgfQoKICAgICAgcmV0dXJuIG51bGw7CiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBvbmlucHV0OiBmdW5jdGlvbiBvbmlucHV0KCkgewogICAgICB0aGlzLnRleHRDb3VudCA9IHRoaXMucG9zdENvbnRlbnQubGVuZ3RoOwogICAgfSwKICAgIG9wZW5GaWxlVXBsb2FkZXI6IGZ1bmN0aW9uIG9wZW5GaWxlVXBsb2FkZXIoKSB7CiAgICAgIGlmICh0aGlzLmltYWdlTGlzdC5sZW5ndGggPT0gMCkgewogICAgICAgIHRoaXMuJHJlZnMuZmlsZVVwbG9hZGVyLmNsaWNrKCk7CiAgICAgIH0KICAgIH0sCiAgICBmaWxlQ2hhbmdlOiBmdW5jdGlvbiBmaWxlQ2hhbmdlKGV2ZW50KSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICB2YXIgZmlsZXMgPSBldmVudC50YXJnZXQuZmlsZXM7IC8v6I635Y+W5paH5Lu25a+56LGhCgogICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGZpbGVzLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgdmFyIHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCk7CiAgICAgICAgcmVhZGVyLnJlYWRBc0RhdGFVUkwoZmlsZXNbaV0pOyAvL+WwhuWbvueJh+i9rOaNouaIkGJhc2U2NOWtl+espuS4sgoKICAgICAgICByZWFkZXIub25sb2FkID0gZnVuY3Rpb24gKGUpIHsKICAgICAgICAgIHZhciBpbWFnZSA9IG5ldyBJbWFnZSgpOyAvL+i9rOaNouaIkEltYWdl5a+56LGh77yM5Li65LqG6I635Y+W5Zu+54mH5aSn5bCPCgogICAgICAgICAgaW1hZ2Uub25sb2FkID0gZnVuY3Rpb24gKCkgewogICAgICAgICAgICAvLyDkv53lrZjliLDlm77niYfliJfooajmlbDnu4TkuK0KICAgICAgICAgICAgX3RoaXMuaW1hZ2VMaXN0LnB1c2goewogICAgICAgICAgICAgIGJhc2U2NDogZS50YXJnZXQucmVzdWx0LAogICAgICAgICAgICAgIHdpZHRoOiBpbWFnZS53aWR0aCwKICAgICAgICAgICAgICBoZWlnaHQ6IGltYWdlLmhlaWdodAogICAgICAgICAgICB9KTsKICAgICAgICAgIH07CgogICAgICAgICAgaW1hZ2Uuc3JjID0gZS50YXJnZXQucmVzdWx0OwogICAgICAgIH07CiAgICAgIH0gLy8g5q+P5qyh6YCJ5a6M5Zu+54mH5ZCO6KaB5riF6ZmkdmFsdWUKCgogICAgICBldmVudC50YXJnZXQudmFsdWUgPSBudWxsOwogICAgfSwKICAgIGRlbGV0ZUltYWdlOiBmdW5jdGlvbiBkZWxldGVJbWFnZShpbmRleCkgewogICAgICB0aGlzLmltYWdlTGlzdC5zcGxpY2UoaW5kZXgsIDEpOwogICAgfSwKICAgIHN1Ym1pdDogZnVuY3Rpb24gc3VibWl0KCkgewogICAgICB2YXIgdGV4dCA9IHRoaXMucG9zdENvbnRlbnQ7CiAgICAgIHZhciBpZCA9IERhdGUubm93KCk7IC8v5oyH5a6a5ZSv5LiAaWQKCiAgICAgIGlmICh0aGlzLmltYWdlTGlzdC5sZW5ndGggPiAwKSB7CiAgICAgICAgLy/liKTmlq3mmK/lkKbpgInmi6nkuoblm77niYcKICAgICAgICB2YXIgc3RyID0gJzxhIGRhdGEtcHJldmlldy1zcmM9IiQkc3JjIiBkYXRhLXByZXZpZXctZ3JvdXA9IiQkaWQiPjxzcGFuIGNsYXNzPSJzdXJsLXRleHQiPuivhOiuuumFjeWbvjwvc3Bhbj48L2E+JzsKICAgICAgICBzdHIgPSBzdHIucmVwbGFjZSgnJCRzcmMnLCB0aGlzLmltYWdlTGlzdFswXS5iYXNlNjQpLnJlcGxhY2UoJyQkaWQnLCBpZCk7IC8vIOS9v+eUqGJhc2U2NOWtl+espuS4suabv+aNogoKICAgICAgICB0ZXh0ICs9IHN0cjsKICAgICAgfQoKICAgICAgdmFyIG9iaiA9IHsKICAgICAgICBjcmVhdGVkX2F0OiBEYXRlLm5vdygpLAogICAgICAgIGlkOiBpZCwKICAgICAgICBsaWtlX2NvdW50OiAwLAogICAgICAgIHRleHQ6IHRleHQsCiAgICAgICAgbW9yZV9pbmZvX3VzZXJzOiBbXSwKICAgICAgICB1c2VyOiB7CiAgICAgICAgICBzY3JlZW5fbmFtZTogdGhpcy5jdXJyZW50VXNlci5zY3JlZW5fbmFtZSwKICAgICAgICAgIHByb2ZpbGVfaW1hZ2VfdXJsOiB0aGlzLmN1cnJlbnRVc2VyLnByb2ZpbGVfaW1hZ2VfdXJsLAogICAgICAgICAgYmFkZ2U6IHsKICAgICAgICAgICAgdXNlcl9uYW1lX2NlcnRpZmljYXRlOiB0aGlzLmN1cnJlbnRVc2VyLnZlcmlmaWVkCiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9OwogICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCgnYWRkQ29tbWVudCcsIG9iaik7CiAgICAgIG11aS50b2FzdCgn6K+E6K665oiQ5YqfJyk7CgogICAgICBpZiAodGhpcy5pc1JlcG9zdCkgewogICAgICAgIHRoaXMuZG9SZXBvc3QoKTsKICAgICAgfQoKICAgICAgdGhpcy4kcm91dGVyLmJhY2soKTsKICAgIH0sCiAgICBkb1JlcG9zdDogZnVuY3Rpb24gZG9SZXBvc3QoKSB7CiAgICAgIHZhciBvYmogPSB7CiAgICAgICAgbWJsb2c6IHsKICAgICAgICAgIGlkOiBEYXRlLm5vdygpLAogICAgICAgICAgYXR0aXRpZGVzX2NvdW50OiAwLAogICAgICAgICAgcmVwb3N0c19jb3VudDogMCwKICAgICAgICAgIGNvbW1lbnRzX2NvdW50OiAwLAogICAgICAgICAgc291cmNlOiAn5b6u5Y2abW9iaWxl54mIJywKICAgICAgICAgIHRleHQ6IHRoaXMucG9zdENvbnRlbnQsCiAgICAgICAgICBwaWNzOiBbXSwKICAgICAgICAgIHJldHdlZXRlZF9zdGF0dXM6IHRoaXMudG9SZXBvc3REYXRhLAogICAgICAgICAgdXNlcjogewogICAgICAgICAgICBzY3JlZW5fbmFtZTogdGhpcy5jdXJyZW50VXNlci5zY3JlZW5fbmFtZSwKICAgICAgICAgICAgcHJvZmlsZV9pbWFnZV91cmw6IHRoaXMuY3VycmVudFVzZXIucHJvZmlsZV9pbWFnZV91cmwsCiAgICAgICAgICAgIGJhZGdlOiB7CiAgICAgICAgICAgICAgdXNlcl9uYW1lX2NlcnRpZmljYXRlOiB0aGlzLmN1cnJlbnRVc2VyLnZlcmlmaWVkCiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH07CiAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCdhZGRQb3N0Jywgb2JqKTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"container\">\n    <headerbar useRightBtn=\"提交\" :useBack=\"true\" title=\"评论微博\" @rightBtnClick=\"submit\"></headerbar>\n    <textarea id=\"postContent\"\n      maxlength=\"30\"\n      placeholder=\"请输入文字...\"\n      @input=\"oninput\"\n      v-model=\"postContent\"></textarea>\n    <div class=\"text-count\"><span class=\"left-count\">{{textCount}}</span>/30</div>\n    <div class=\"selected-images\">\n      <div class=\"image-item\" v-for=\"(item,index) in imageList\" :key=\"index\" :style=\"imgStyle(item)\">\n        <div class=\"delete-icon\" @click=\"deleteImage(index)\"></div>\n      </div>\n      <div v-if=\"imageList.length == 0\" class=\"plus-image\" @click=\"openFileUploader\"></div>\n    </div>\n    <input type=\"file\" id=\"fileUploader\" ref=\"fileUploader\"\n       @change=\"fileChange\"\n       accept=\"image/*\"\n       multiple=\"multiple\"/>\n    <div class=\"repost-content\">\n      <div class=\"mui-checkbox repost-btn\">\n        <input class=\"repost-checkbox\" value=\"\" v-model=\"isRepost\" type=\"checkbox\">\n      </div>\n      <div class=\"repost-text\">同时转发</div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport headerbar from '@/components/headerbar'\nexport default {\n  name: 'comment',\n  components:{\n    headerbar\n  },\n  data(){\n    return {\n      postContent: '',\n      textCount: 0,\n      imageList: [],\n      isRepost: false\n    }\n  },\n  computed: {\n    imgStyle () {\n      return item => {\n        return {\n          backgroundImage: 'url(' + item.base64 + ')'\n        }\n      }\n    },\n    currentUser(){\n      return this.$store.state.currentUser\n    },\n    toRepostData(){\n      if (this.$store.state.toRepostData) {\n        return this.$store.state.toRepostData.mblog\n      }\n\n      return null\n      \n    }\n  },\n  methods:{\n    oninput(){\n      this.textCount = this.postContent.length\n    },\n    openFileUploader(){\n      if (this.imageList.length == 0) {\n        this.$refs.fileUploader.click()\n      }\n      \n    },\n    fileChange (event) {\n      let files = event.target.files; //获取文件对象\n      for (let i = 0; i < files.length; i++) {\n        var reader = new FileReader();\n        reader.readAsDataURL(files[i]); //将图片转换成base64字符串\n        reader.onload = (e) => {\n          let image = new Image() //转换成Image对象，为了获取图片大小\n          image.onload = () => {\n            // 保存到图片列表数组中\n            this.imageList.push({\n              base64: e.target.result,\n              width: image.width,\n              height: image.height\n            })\n          }\n          image.src = e.target.result\n        }\n      }\n      // 每次选完图片后要清除value\n      event.target.value = null\n    },\n    deleteImage(index){\n      this.imageList.splice(index, 1)\n    },\n    submit(){\n      let text = this.postContent\n      let id = Date.now() //指定唯一id\n      if (this.imageList.length > 0) {//判断是否选择了图片\n        let str = '<a data-preview-src=\"$$src\" data-preview-group=\"$$id\"><span class=\"surl-text\">评论配图</span></a>'\n        str = str.replace('$$src', this.imageList[0].base64).replace('$$id', id) // 使用base64字符串替换\n        text += str\n      }\n\n      let obj = {\n        created_at: Date.now(),\n        id: id,\n        like_count: 0,\n        text: text,\n        more_info_users: [],\n        user: {\n          screen_name: this.currentUser.screen_name,\n          profile_image_url: this.currentUser.profile_image_url,\n          badge:{\n            user_name_certificate: this.currentUser.verified\n          }\n        }\n      }\n\n      this.$store.dispatch('addComment',obj)\n      mui.toast('评论成功')\n\n      if (this.isRepost) {\n        this.doRepost()\n      }\n      this.$router.back()\n    },\n    doRepost(){\n      let obj = {\n        mblog: {\n          id: Date.now(),\n          attitides_count: 0,\n          reposts_count: 0,\n          comments_count: 0,\n          source: '微博mobile版',\n          text: this.postContent,\n          pics:[],\n          retweeted_status: this.toRepostData,\n          user: {\n            screen_name: this.currentUser.screen_name,\n            profile_image_url: this.currentUser.profile_image_url,\n            badge:{\n              user_name_certificate: this.currentUser.verified\n            }\n          }\n        }\n      }\n\n      this.$store.dispatch('addPost',obj)\n    }\n  }\n\n}\n</script>\n<style scoped>\n.container {\n  position: fixed;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  top: 0;\n  background-color: #fff;\n}\n#postContent {\n  margin-top: 45px;\n  border: none;\n  font-size: 16px;\n  width: 100%;\n  height: 200px;\n  box-sizing: border-box;\n}\n.text-count {\n  font-size: 14px;\n  color: #707070;\n  position: absolute;\n  right: 20px;\n  top: 230px;\n}\n#fileUploader {\n  display: none;\n}\n.selected-images {\n  display: flex;\n  flex-wrap: wrap;\n}\n.image-item {\n  width: 100px;\n  height: 100px;\n  position: relative;\n  background-size: cover;\n  background-position: center center;\n  background-repeat: no-repeat;\n  margin-left: 20px;\n  margin-bottom: 20px;\n}\n.plus-image {\n  width: 100px;\n  height: 100px;\n  position: relative;\n  background-size: 24px 24px;\n  background-position: center center;\n  background-repeat: no-repeat;\n  background-image: url('./imgs/plus.png');\n  margin-left: 20px;\n  border: 1px dashed #aaa;\n}\n.delete-icon {\n  position: absolute;\n  width: 15px;\n  height: 15px;\n  background-image: url('./imgs/delete.png');\n  background-size: cover;\n  top: -7px;\n  right: -7px;\n}\n.repost-content {\n  margin-top: 10px;\n  overflow: hidden;\n}\n.repost-btn {\n  float: left;\n  width: 50px;\n  height: 50px;\n  margin-left: 15px;\n}\n.repost-checkbox:checked::before {\n  color: #ff9f52 !important;\n}\n.repost-text {\n  float: left;\n  margin-top: 9px;\n  font-size: 16px;\n  color: #333;\n  margin-left: -10px;\n}\n</style>\n"],"sourceRoot":"src/views/comment"}]}